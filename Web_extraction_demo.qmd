---
title: "Web Extraction"
format: html
author: "Nathan Weldon"
date: as.date()
editor: visual
---

## Introduction

In this project, I will work with online sources to recreate already produced data as a challenge. I will demonstrate my ability in data extraction, cleaning, and visualization.

```{r}
pacman::p_load(
  tidyverse,
  fivethirtyeight,
  rvest,
  httr,
  janitor
)

```

## Movie Data

538 is a website that focuses on opinion poll analysis, politics, economics, and sports blogging. It was created and is currently run by Nate Silver, who has become famous for his writing and work on the site. I found this interesting article [linked here](https://fivethirtyeight.com/features/fandango-movies-ratings/) about how fandango has skewed ratings for a variety of reasons, when rating movies. Below is the recreation of the plot containing all of the critics and their ratings, along with more conclusions.

```{r warning = FALSE, echo = FALSE, include = FALSE}
# install.packages("fivethirtyeight")
ratings <- read.csv('https://raw.githubusercontent.com/fivethirtyeight/data/master/fandango/fandango_score_comparison.csv') 

```

```{r include = FALSE}
# Fandango
fandango_count <- count(ratings, Fandango_Stars)
fandango_data <- tibble(Fandango_Stars = seq(.5,5, .5)) %>% 
  full_join(fandango_count) %>% 
  mutate(count_fan = case_when(
    is.na(n) ~ 0,
    !is.na(n) ~ as.numeric(n)
  )) %>% 
  mutate(rating = Fandango_Stars) %>% 
  select(rating, count_fan)

#Rotten Tomatoes
rt_count <- count(ratings, RT_norm_round)
rt_data <- tibble(RT_norm_round = seq(0.5, 5, .5)) %>% 
  full_join(rt_count) %>% 
  mutate(count_rt = case_when(
    is.na(n) ~ 0,
    !is.na(n) ~ as.numeric(n)
  )) %>% mutate(rating = RT_norm_round) %>% 
  select(rating, count_rt)

#RT User
rt_user_count <- count(ratings, RT_user_norm_round)
rt_user_data <- tibble(RT_user_norm_round = seq(0.5, 5, .5)) %>% 
  full_join(rt_user_count) %>% 
  mutate(count_rtu = case_when(
    is.na(n) ~ 0,
    !is.na(n) ~ as.numeric(n)
  )) %>% mutate(rating = RT_user_norm_round) %>% 
  select(rating, count_rtu)

#Metacritic
mc_count <- count(ratings, Metacritic_norm_round)
mc_data <- tibble(Metacritic_norm_round = seq(0.5, 5, .5)) %>% 
  full_join(mc_count) %>% 
  mutate(count_mc = case_when(
    is.na(n) ~ 0,
    !is.na(n) ~ as.numeric(n)
  )) %>% mutate(rating = Metacritic_norm_round) %>% 
  select(rating, count_mc)

#MC User
mc_user_count <- count(ratings, Metacritic_user_norm_round)
mc_user_data <- tibble(Metacritic_user_norm_round = seq(0.5, 5, .5)) %>% 
  full_join(mc_user_count) %>% 
  mutate(count_mcu = case_when(
    is.na(n) ~ 0,
    !is.na(n) ~ as.numeric(n)
  )) %>% mutate(rating = Metacritic_user_norm_round) %>% 
  select(rating, count_mcu)

#IMDB user
imdb_user_count <- count(ratings, IMDB_norm_round)
imdb_user_data <- tibble(IMDB_norm_round = seq(0.5, 5, .5)) %>% 
  full_join(imdb_user_count) %>% 
  mutate(count_imdbu = case_when(
    is.na(n) ~ 0,
    !is.na(n) ~ as.numeric(n)
  )) %>% mutate(rating = IMDB_norm_round) %>% 
  select(rating, count_imdbu) 

```

```{r}
# Combined dataset
df <-  merge(fandango_data, c(rt_data, rt_user_data, mc_data, mc_user_data,imdb_user_data)) %>% 
  select(rating, contains("_"))
df

# Final Plot
df %>% ggplot(aes(x = rating, y = count_fan)) +
  geom_line(color = "red") + # fandango
  geom_area(color = 'red', alpha = .5) +
  geom_line(aes(x = rating, y = count_rt, color = "black")) + # RT
  geom_line(aes(x = rating, y = count_rtu, color = "blue")) + # RT Users
  geom_line(aes(x = rating, y = count_mc, color = "purple")) + # MC
  geom_line(aes(x = rating, y = count_mcu, color = "green")) + # MC Users
  geom_line(aes(x = rating, y = count_rt, color = "yellow")) # IMDb Users

```

### Conclusion

## HTML

IGNORE THIS PART - TO COME

```{r}

```
