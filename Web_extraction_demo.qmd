---
title: "Web Extraction"
format: html
author: "Nathan Weldon"
date: as.date()
editor: visual
---

## Introduction

In this project, I will work with online sources to recreate already produced data as a challenge. I will demonstrate my ability in data extraction, cleaning, and visualization.

```{r warning = FALSE}
pacman::p_load(
  tidyverse,
  fivethirtyeight,
  rvest,
  httr,
  janitor
)

```

## Movie Data

538 is a website that focuses on opinion poll analysis, politics, economics, and sports blogging. It was created and is currently run by Nate Silver, who has become famous for his writing and work on the site. I found this interesting article [linked here](https://fivethirtyeight.com/features/fandango-movies-ratings/) about how fandango has skewed ratings for a variety of reasons, when rating movies. Below is the recreation of the plot containing all of the critics and their ratings, along with more conclusions. I have kept the code to a minimum on the final rendering, but if you wish to view the code please checkout the [GitHub repository here](https://github.com/nathanweldon/Web-extraction-demo).

```{r warning = FALSE, echo = FALSE, include = FALSE}
# install.packages("fivethirtyeight")
ratings <- read.csv('https://raw.githubusercontent.com/fivethirtyeight/data/master/fandango/fandango_score_comparison.csv') 

```

```{r warning = FALSE, include = FALSE}
# Fandango
fandango_count <- count(ratings, Fandango_Stars)
fandango_data <- tibble(Fandango_Stars = seq(.5,5, .5)) %>% 
  full_join(fandango_count) %>% 
  mutate(count_fan = case_when(
    is.na(n) ~ 0,
    !is.na(n) ~ as.numeric(n)
  )) %>% 
  mutate(rating = Fandango_Stars) %>% 
  select(rating, count_fan)

#Rotten Tomatoes
rt_count <- count(ratings, RT_norm_round)
rt_data <- tibble(RT_norm_round = seq(0.5, 5, .5)) %>% 
  full_join(rt_count) %>% 
  mutate(count_rt = case_when(
    is.na(n) ~ 0,
    !is.na(n) ~ as.numeric(n)
  )) %>% mutate(rating = RT_norm_round) %>% 
  select(rating, count_rt)

#RT User
rt_user_count <- count(ratings, RT_user_norm_round)
rt_user_data <- tibble(RT_user_norm_round = seq(0.5, 5, .5)) %>% 
  full_join(rt_user_count) %>% 
  mutate(count_rtu = case_when(
    is.na(n) ~ 0,
    !is.na(n) ~ as.numeric(n)
  )) %>% mutate(rating = RT_user_norm_round) %>% 
  select(rating, count_rtu)

#Metacritic
mc_count <- count(ratings, Metacritic_norm_round)
mc_data <- tibble(Metacritic_norm_round = seq(0.5, 5, .5)) %>% 
  full_join(mc_count) %>% 
  mutate(count_mc = case_when(
    is.na(n) ~ 0,
    !is.na(n) ~ as.numeric(n)
  )) %>% mutate(rating = Metacritic_norm_round) %>% 
  select(rating, count_mc)

#MC User
mc_user_count <- count(ratings, Metacritic_user_norm_round)
mc_user_data <- tibble(Metacritic_user_norm_round = seq(0.5, 5, .5)) %>% 
  full_join(mc_user_count) %>% 
  mutate(count_mcu = case_when(
    is.na(n) ~ 0,
    !is.na(n) ~ as.numeric(n)
  )) %>% mutate(rating = Metacritic_user_norm_round) %>% 
  select(rating, count_mcu)

#IMDB user
imdb_user_count <- count(ratings, IMDB_norm_round)
imdb_user_data <- tibble(IMDB_norm_round = seq(0.5, 5, .5)) %>% 
  full_join(imdb_user_count) %>% 
  mutate(count_imdbu = case_when(
    is.na(n) ~ 0,
    !is.na(n) ~ as.numeric(n)
  )) %>% mutate(rating = IMDB_norm_round) %>% 
  select(rating, count_imdbu) 



```

```{r warning = FALSE}
fandango_data
rt_data
rt_user_data
mc_data
mc_user_data
imdb_user_data
```

```{r warning = FALSE}
# Final data set and plot
df <-  merge(fandango_data, 
             c(rt_data, rt_user_data, mc_data, mc_user_data,imdb_user_data)) %>% 
  select(rating, 
         contains("_"))
df

```

```{r echo = FALSE, warning = FALSE, fig.align='center', fig.height=5, fig.width=7}

#Final Plot
final_plot <- ggplot(data = df, aes(x = rating, y = count_fan)) +
  geom_line(color = "red") + 
  geom_text(aes(x = 5, y = 45, label = "Fandango"), color = "Tomato") +
  geom_line(aes(x = rating, y = count_rt), color = "#333333", ) + 
  geom_text(aes(x = .5, y = 20, label = "Rotten\nTomatoes"), color = "#333333") +
  geom_line(aes(x = rating, y = count_rtu), color = "#3399FF") + 
  geom_text(aes(x = 2.15, y = 30, label = "Rotten Tomatoes\nUsers"), color = "#3399FF") +
  geom_line(aes(x = rating, y = count_mc), color = "#990099") + 
  geom_text(aes(x = 1.5, y = 25, label = "Metacritic"), color = "#990099")+
  geom_line(aes(x = rating, y = count_mcu), color = "#009900") + 
  geom_text(aes(x = 2.75, y = 40, label = "Metacritic\nUsers"), color = "#009900") +
  geom_line(aes(x = rating, y = count_imdbu), color = "#CCCC00") + 
  geom_text(aes(x = 3, y = 57, label = "IMDb\nUsers"), color = "#CCCC00") +
  geom_area(fill =  "tomato", alpha = .5) +
  scale_x_continuous(limits = c(0,5.1), 
                     breaks = seq(0,5,1)) +
  scale_y_continuous(limits = c(0,90), 
                     labels = scales::percent_format(scale = .5, 
                                                     accuracy = 10)) +
  labs(title = "Fandango LOVES Movies",
       subtitle = "Normalized ratings distribution of 146 films that \nplayed in theaters in 2015 and received 30+ reviews on Fandango.com",
       y = " ",
       x = " ") +
  theme(panel.background = element_rect(fill = '#F5F5F5')) +
  theme(plot.background = element_rect(fill = '#F5F5F5')) +
  theme(plot.title = element_text(size = 20, face = 'bold', color = 'grey20')) +
  theme(plot.subtitle = element_text(size = 13, color = 'grey25'))

final_plot
```

### Conclusion

My method was to take the ratings data set to calculate all of the rounded ratings for Fandango, Rotten Tomatoes, Rotten Tomatoes users, Metacritic, Metacritic users, and IMDb users, then plot them to demonstrate the major difference in the ratings for Fandango compared to the rest. I did this by reading in the data set as a .csv, finding the respective amount of votes for each rating, combining all of the sets of data of each critic, and changing missing values to 0. With the final data set and various aesthetics, I was able to produce this plot.

The original article goes into detail regarding the statistics and theories behind this data, but simply by observing the plot, there is an obvious trend of Fandango having higher ratings than the rest. There is not much more interpretation from this plot, but it was good practice to be able to recreate.

Some issues I ran into was finding a way to put the gray fill color underneath all of the lines, as I could only maneuver my way to get one using geom_area(). Also, I could not find a package containing aesthetics for stars for the x axis: the graph on the page contains stars on the bottom of the graph but I did not find any in my research. Fortunately, my greatest issues were primarily in the aesthetics department and not so much in the technical area.

## HTML

IGNORE THIS PART - TO COME

```{r warning = FALSE}
education <- read_html('https://en.wikipedia.org/wiki/Educational_attainment_in_the_United_States') %>%
  html_elements('table.sortable') %>%
  html_table()
```

```{r warning = FALSE, include = FALSE}
tmp <- education[[2]] %>%
  drop_na() %>%
  clean_names() %>%
  pivot_longer(!year, names_to = 'Age', values_to ='Median_income') %>%
  mutate(Median_income = str_sub(Median_income, start = 2)) %>%
  filter(Median_income %>% str_detect(",")) %>%
  slice(-c(159:176)) 

age <- tmp$Age %>%
  str_replace_all('_',' ') %>%
  str_to_title() %>%
  fct_relevel(c("Less Than 9th Grade",
                "High School Drop Out",
                "High School Graduate",
                "Some College",
                "Associate Degree",
                "Bachelors Degree",
                "Bachelors Degree Or More",
                "Masters Degree",
                "Doctorate Degree",
                "Professional Degree",
                "Overall Median"))

med_income <- tmp$Median_income %>%
  str_remove(',') %>%
  as.numeric(tmp$Median_income)


```

```{r warning = FALSE, fig.width = 7, fig.height = 5}
df <- tmp %>%
  mutate(Level = age) %>%
  mutate(Income = med_income) %>%
  select(1,4,5)
df

ggplot(data = df, aes(year, med_income, color = Level, group = Level)) +
  geom_line() +
  labs(x = 'Year',
       y = 'Median Income') +
  scale_y_continuous(limits = c(20000,160000)) +
  theme_bw()
```
